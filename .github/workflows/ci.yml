name: Smart Contract CI

on: [push, pull_request]

jobs:
    test:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2
            - name: Install Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: 16.x
            - name: Install dependencies
              run: npm ci
            - name: Run tests
              run: npx hardhat test

    buildAndPushImage:
        name: Build and Push docker image
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/docker-ci'
        needs: test
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Install Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: 16.x

            - name: Set correct version
              id: version
              run: echo ::set-output name=version::$(node -e "console.log(require('./package.json').version);")

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v1

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-west-3

            - name: Login to ECR
              uses: docker/login-action@v1
              with:
                  registry: public.ecr.aws

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v3
              with:
                  images: |
                      public.ecr.aws/o5j5y3t5/hardhat-thx-artifacts
                  tags: |
                      type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}

            - name: Build
              uses: docker/build-push-action@v2
              with:
                  context: .
                  push: true
                  platforms: linux/amd64,linux/arm64
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
